# More parameters can be found in https://github.com/ethpandaops/ethereum-package?tab=readme-ov-file#configuration
# Specification of the participants in the network
participants:
  # EL(Execution Layer) Specific flags
    # The type of EL client that should be started
    # Valid values are geth, nethermind, erigon, besu, ethereumjs, reth, nimbus-eth1
  - el_type: geth
    # The Docker image that should be used for the EL client
    el_image: "ethereum/client-go:v1.14.8"
  # CL(Consensus Layer) Specific flags
    # The type of CL client that should be started
    # Valid values are nimbus, lighthouse, lodestar, teku, prysm, and grandine
    cl_type: lighthouse
    # The Docker image that should be used for the CL client;
    cl_image: "sigp/lighthouse:v5.3.0"
    # Count of nodes to spin up for this participant
    count: 3
    # Prometheus additional configuration for a given participant prometheus target.
    # Execution, beacon and validator client targets on prometheus will include this
    # configuration.
    prometheus_config:
      scrape_interval: 15s
      labels: {}
# Configuration parameters for the network
network_params:
# Number of seconds per slot on the Beacon chain
  seconds_per_slot: 12
# How long you want the network to wait before starting up
  genesis_delay: 20
# Additional services available in the Ethereum Package that can be enabled 
additional_services:
  - prometheus_grafana # Spins up a grafana with prometheus to monitor the performance of the devnet
  # - blockscout # TODO: No image available for Arm64. Wait for https://github.com/blockscout/blockscout-rs/pull/747. Using Dora instead.
  - dora # A ligthweight beaconchain explorer
  - el_forkmon # A tool to keep track on a set of nodes, and see if they keep in step or if they go out of consensus.
  - beacon_metrics_gazer # A validator metrics tool to monitor the performance of the validators on the network
  - assertoor # Testing tool with asserting conditions
  - blobscan # A tool to scan the network for blobs and analyze the data that is being sent around
  - dugtrio # A consensus layer load balancer
  - blutgang # An execution layer load balancer
  - tracoor # A beacon data and execution trace explorer
# Configuration place for prometheus
prometheus_params:
  storage_tsdb_retention_time: "1d"
  storage_tsdb_retention_size: "512MB"
  # Resource management for prometheus container
  # CPU is milicores
  # RAM is in MB
  min_cpu: 10
  max_cpu: 1000
  min_mem: 128
  max_mem: 2048
# Configuration place for grafana
grafana_params:
  # A list of locators for grafana dashboards to be loaded be the grafana service
  additional_dashboards: []
    # TODO: add extra custom dashboards and alerts to the list once it's supported
    # - src/grafana/provisioning/alerting/alert_rules.yaml
    # - src/grafana/provisioning/dashboards/custom_darshboard.yaml
  # Resource management for grafana container
  # CPU is milicores
  # RAM is in MB
  min_cpu: 10
  max_cpu: 1000
  min_mem: 128
  max_mem: 2048
# Configuration place for the assertoor testing tool - https://github.com/ethpandaops/assertoor
assertoor_params:
  # Check chain stability
  # This check monitors the chain and succeeds if:
  # - all clients are synced
  # - chain is finalizing for min. 2 epochs
  # - >= 98% correct target votes
  # - >= 80% correct head votes
  # - no reorgs with distance > 2 blocks
  # - no more than 2 reorgs per epoch
  run_stability_check: true
  # Check block proposals
  # This check monitors the chain and succeeds if:
  # - all client pairs have proposed a block
  run_transaction_test: false # Being done in the block-proposal-check.yaml
  # Run additional tests from external test definitions
  # Entries may be simple strings (link to the test file) or dictionaries with more flexibility
  # eg:
  #   - https://raw.githubusercontent.com/ethpandaops/assertoor/master/example/tests/block-proposal-check.yaml
  #   - file: "https://raw.githubusercontent.com/ethpandaops/assertoor/master/example/tests/block-proposal-check.yaml"
  #     config:
  #       someCustomTestConfig: "some value"
  tests:
    - ./.github/workflows/tests/assertoor/all-opcodes-test.yaml
    - ./.github/workflows/tests/assertoor/block-proposal-check.yaml
# global_log_level: "info"
# EngineAPI Snooper global flags for all participants
# Default to false
snooper_enabled: false
# Enables Ethereum Metrics Exporter for all participants
ethereum_metrics_exporter_enabled: true
# disable_peer_scoring: false
# Whether the environment should be persistent; this is WIP and is slowly being rolled out accross services
# Note this requires Kurtosis greater than 0.85.49 to work
# Note Erigon, Besu, Teku persistence is not currently supported with docker.
persistent: false
# Enables Xatu Sentry for all participants - https://github.com/ethpandaops/xatu
xatu_sentry_enabled: false # TODO: Enable this once a Xatu Server/Clickhouse deployment has been added to this package
xatu_sentry_params:
  xatu_sentry_image: ethpandaops/xatu:latest
  xatu_server_addr: localhost:8080
  xatu_server_tls: false
  xatu_server_headers: {}
  beacon_subscriptions:
    - attestation
    - block
    - chain_reorg
    - finalized_checkpoint
    - head
    - voluntary_exit
    - contribution_and_proof
    - blob_sidecar
